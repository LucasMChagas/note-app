@using NoteApp.Web.Services
@using NoteApp.Web.Components
@inherits LayoutComponentBase
@inject IStorageService StorageService
@inject NavigationManager Navigator
@inject AppState AppState

<MudThemeProvider @ref="_mudThemeProvider"  Theme="Configuration.Theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudAppBar>
    <MenuItems IsAuthenticated="@AppState.IsAuthenticated"></MenuItems>
</MudAppBar>
<MudGrid Justify="Justify.Center" Style="height: 102vh; align-items: center">
    @Body
</MudGrid>

@code{
    private string Token;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Configuration.IsDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
        }
    }

    private Task OnSystemPreferenceChanged(bool value)
    {
        Configuration.IsDarkMode = value;
        StateHasChanged();
        return Task.CompletedTask;
    }
    
    protected override async Task OnInitializedAsync()
    {
        Token = await StorageService.GetItemAsync("jwtToken");
        AppState.IsAuthenticated = Token is not (null or FilterOperator.String.Empty);
        AppState.OnChange += StateHasChanged;

        if (Token != null)
        {
            Navigator.NavigateTo("/notes");
        }
        
    }
    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }
    
}


